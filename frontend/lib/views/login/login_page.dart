import 'package:flutter/material.dart';
import 'package:frontend/service/api_service.dart';
import 'package:frontend/views/book/book_page_admin.dart';
import 'package:frontend/views/book/book_page_user.dart';
import 'package:frontend/views/login/signin_page.dart';

class LoginPage extends StatefulWidget {
  const LoginPage({super.key});

  @override
  _LoginPageState createState() => _LoginPageState();
}

class _LoginPageState extends State<LoginPage> {
  final TextEditingController _emailController = TextEditingController();
  final TextEditingController _passwordController = TextEditingController();

  bool isPasswordVisible = false;

  Future<void> _login() async {
    String email = _emailController.text.trim();
    String password = _passwordController.text.trim();

    if (email.isEmpty || password.isEmpty) {
      _showMessage("Email v√† m·∫≠t kh·∫©u kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng!");
      return;
    }

    if (email == "admin123@gmail.com" && password == "admin123") {
      print("‚úÖ ƒêƒÉng nh·∫≠p admin th√†nh c√¥ng!");
      _showMessage("ƒêƒÉng nh·∫≠p admin th√†nh c√¥ng!");
      Navigator.pushReplacement(
        context,
        MaterialPageRoute(builder: (context) => const BookPageAdmin()),
      );
      return;
    }

    var response = await ApiService.loginUser(email, password);

    if (response["success"]) {
      String token = response["token"];
      print("‚úÖ ƒêƒÉng nh·∫≠p th√†nh c√¥ng, Token: $token");
      _showMessage("ƒêƒÉng nh·∫≠p th√†nh c√¥ng!");
      Navigator.pushReplacement(
        context,
        MaterialPageRoute(builder: (context) => const BookPage()),
      );
    } else {
      _showMessage("‚ùå ${response["message"]}");
    }
  }

  void _showMessage(String message) {
    ScaffoldMessenger.of(
      context,
    ).showSnackBar(SnackBar(content: Text(message)));
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: const Color.fromARGB(
        117,
        222,
        217,
        217,
      ), // N·ªÅn m√†u x√°m nh·∫°t
      body: Center(
        child: Padding(
          padding: const EdgeInsets.all(20.0),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              // Ti√™u ƒë·ªÅ LOGIN
              const Center(
                child: Text(
                  "LOGIN",
                  style: TextStyle(
                    fontSize: 24,
                    color: Colors.white,
                    fontWeight: FontWeight.bold,
                  ),
                ),
              ),

              const SizedBox(height: 40),
              Text("User", style: TextStyle(color: Colors.white)),
              // √î nh·∫≠p Email
              TextField(
                controller: _emailController,

                decoration: InputDecoration(
                  filled: true,
                  fillColor: Colors.white, // N·ªÅn tr·∫Øng
                  hintText: "Nh·∫≠p email...",
                  border: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(50),
                  ),
                  prefixIcon: const Icon(Icons.email, color: Colors.black),
                ),
              ),

              const SizedBox(height: 20),
              Text("Password", style: TextStyle(color: Colors.white)),
              // √î nh·∫≠p Password
              TextField(
                controller: _passwordController,
                obscureText: !isPasswordVisible,
                decoration: InputDecoration(
                  filled: true,
                  fillColor: Colors.white, // N·ªÅn tr·∫Øng
                  hintText: "Nh·∫≠p m·∫≠t kh·∫©u...",
                  border: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(50),
                  ),
                  prefixIcon: const Icon(Icons.lock, color: Colors.black),
                  suffixIcon: IconButton(
                    icon: Icon(
                      isPasswordVisible
                          ? Icons.visibility
                          : Icons.visibility_off,
                      color: Colors.black,
                    ),
                    onPressed: () {
                      setState(() {
                        isPasswordVisible =
                            !isPasswordVisible; // üîÑ ƒê·∫£o tr·∫°ng th√°i
                      });
                    },
                  ),
                ),
              ),
              const SizedBox(height: 20),
              // Logo
              Center(
                child: Image.asset(
                  'lib/assets/images/logo.png', // ƒê·∫∑t ·∫£nh logo trong th∆∞ m·ª•c assets
                  height: 300,
                ),
              ),

              const SizedBox(height: 20),
              // N√∫t ƒêƒÉng nh·∫≠p
              SizedBox(
                width: double.infinity,
                child: ElevatedButton(
                  onPressed: () {
                    _login();
                  },
                  style: ElevatedButton.styleFrom(
                    padding: const EdgeInsets.symmetric(vertical: 15),
                    backgroundColor: Colors.purpleAccent, // M√†u tr·∫Øng
                    foregroundColor: Colors.white, // M√†u ch·ªØ ƒëen
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(50),
                    ),
                  ),
                  child: const Text("Submit"),
                ),
              ),
              const SizedBox(height: 10),

              // N√∫t ƒêƒÉng k√Ω
              Center(
                child: TextButton(
                  onPressed: () {
                    Navigator.push(
                      context,
                      MaterialPageRoute(
                        builder: (context) => const SigninPage(),
                      ),
                    );
                  },
                  child: const Text(
                    "Ch∆∞a c√≥ t√†i kho·∫£n? ƒêƒÉng k√Ω ngay",
                    style: TextStyle(color: Colors.white),
                  ),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
